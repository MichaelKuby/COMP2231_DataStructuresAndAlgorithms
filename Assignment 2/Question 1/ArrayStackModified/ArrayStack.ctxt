#BlueJ class context
comment0.target=ArrayStack
comment0.text=\n\ An\ array\ implementation\ of\ a\ stack\ in\ which\ the\ bottom\ of\ the\n\ stack\ is\ fixed\ at\ index\ 0,\ and\ stack[top]\ represents\ the\ actual\ top\ of\ the\ stack.\n\ \n\ @author\ Michael\ Kuby\n\ @version\ Wednesday\ January\ 19,\ 2022\n
comment1.params=
comment1.target=ArrayStack()
comment1.text=\n\ Creates\ an\ empty\ stack\ using\ the\ default\ capacity.\n
comment2.params=initialCapacity
comment2.target=ArrayStack(int)
comment2.text=\n\ Creates\ an\ empty\ stack\ using\ the\ specified\ capacity.\n\ @param\ initialCapacity\ the\ initial\ size\ of\ the\ array\ \n
comment3.params=element
comment3.target=void\ push(java.lang.Object)
comment3.text=\n\ Adds\ the\ specified\ element\ to\ the\ top\ of\ this\ stack,\ expanding\n\ the\ capacity\ of\ the\ array\ if\ necessary.\n\ @param\ element\ generic\ element\ to\ be\ pushed\ onto\ stack\n
comment4.params=
comment4.target=void\ expandCapacity()
comment4.text=\n\ Creates\ a\ new\ array\ to\ store\ the\ contents\ of\ this\ stack\ with\n\ twice\ the\ capacity\ of\ the\ old\ one.\n
comment5.params=
comment5.target=java.lang.Object\ pop()
comment5.text=\n\ Removes\ the\ element\ at\ the\ top\ of\ this\ stack\ and\ returns\ a\n\ reference\ to\ it.\ \n\ @return\ element\ removed\ from\ top\ of\ stack\n\ @throws\ EmptyCollectionException\ if\ stack\ is\ empty\ \n
comment6.params=
comment6.target=java.lang.Object\ peek()
comment6.text=\n\ Returns\ a\ reference\ to\ the\ element\ at\ the\ top\ of\ this\ stack.\n\ The\ element\ is\ not\ removed\ from\ the\ stack.\ \ \n\ @return\ element\ on\ top\ of\ stack\n\ @throws\ EmptyCollectionException\ if\ stack\ is\ empty\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\n\ Returns\ true\ if\ this\ stack\ is\ empty\ and\ false\ otherwise.\ \n\ @return\ true\ if\ this\ stack\ is\ empty\n
comment8.params=
comment8.target=int\ size()
comment8.text=\n\ Returns\ the\ number\ of\ elements\ in\ this\ stack.\n\ @return\ the\ number\ of\ elements\ in\ the\ stack\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Returns\ a\ string\ representation\ of\ this\ stack.\ \n\ @return\ a\ string\ representation\ of\ the\ stack\n
numComments=10
